<?xml version="1.0" encoding="UTF-8"?>
<component type="desktop-application">
  <id>com.defold.Engine</id>
  <metadata_license>FSFAP</metadata_license>
  <project_license>LicenseRef-proprietary=https://defold.com/license/</project_license>
  <name>Defold Engine</name>
  <summary>The ultimate game engine for web and mobile</summary>

  <description>
    <p>
      Free to use:
      Defold is completely free to use with a developer-friendly license for both personal and commercial use.
    </p>
    <p>
      Games:
      Defold is used by game developers all over the world. It’s a proven tool for games of all genres.
    </p>
    <p>
      Performance first:
      Built from the ground up with a clear focus on performance. Spend time making games, not waiting for builds.
    </p>
  </description>

  <launchable type="desktop-id">com.defold.Engine.desktop</launchable>

  <screenshots>
    <screenshot type="default">
      <caption>Editor</caption>
      <image>https://defold.com/images/editor/nosetup-editor.png</image>
    </screenshot>
  </screenshots>

  <url type="homepage">https://defold.com/</url>

  <provides>
    <binary>Defold</binary>
  </provides>

  <releases>
    <release version="1.2.180" date="2021-03-08">
      <description>
        This release we’ve worked on some major improvements to both our OpenGL backend as well as our texture format support.
        We’ve also added a much more robust Lua parser for our require() detection.

        The sound component now also have a loop count.

        Texture compression
        We now support Basis Universal 4 texture compression.
        It is a format that transcodes at runtime into a final format that the device supports (e.g. ASTC or ETC2).
        You can see more about which runtime formats we support in the code 3.

        This makes it the first time we’ve had GPU texture formats on desktop and HTML5.
        Not only will it take up less memory on the GPU, but the bundle size will be smaller.

        This change also made the old WebP compression obsolete. For backwards compatibility, if your .texture_profiles uses WEBP_LOSSY compression type, it will now instead use BASIS_UASTC. The WEBP compression type now becomes DEFAULT.

        OpenGL ES 3 support
        This release we’ve also updated our OpenGL backend to support OpenGLES 3/WebGL 2 where possible.
        For those platforms that require it (Android + HTML5), we also support an automatic fallback to OpenGLES 2/WebGL 1.

        Most of the shaders should work as they are, but since it’s a major version update, you might find a case where the shader need a manual update. E.g. we had to update our font-df.fp shader to not use the reserved keyword sample. The change in our case was simply to rename the variable like so vec4 df_sample.

        Also, special thanks @aglitchman for the extensive testing during the alpha period!
      </description>
    </release>
  </releases>
</component>
